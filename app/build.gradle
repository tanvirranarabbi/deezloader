apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    signingConfigs {
        release {
            storeFile file("C:\\keystore\\keystore.jks")
            storePassword ""
            keyAlias "key0"
            keyPassword ""
        }
    }

    defaultConfig {
        applicationId "com.dt3264.deezloader"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 244
        versionName "2.4.4"

        archivesBaseName = "Deezloader-$versionName"

        externalNativeBuild {
            cmake {
                cppFlags ""
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a"
            universalApk false
        }
    }

    externalNativeBuild {
        cmake {
            version "3.10.2"
            path "CMakeLists.txt"
        }
    }

    // If you want Gradle to package prebuilt native libraries
    // with your APK, modify the default source set configuration
    // to include the directory of your prebuilt .so files as follows.
    sourceSets {
        main {
            jniLibs.srcDirs 'libnode/bin/'
        }
    }

    applicationVariants.all { variant ->
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assembleProvider.get().doLast {
                (new File(variant.mappingFile.parent, "$archivesBaseName-$variant.baseName-mapping.txt")).delete()
                variant.mappingFile.renameTo(variant.mappingFile.parent +
                        "/$archivesBaseName-$variant.baseName-mapping.txt")
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
        disable 'SetJavaScriptEnabled'
    }
}

task zipAssets(type: Zip) {
    from "../deezloader"
    archiveFileName = "deezloader.zip"
    destinationDirectory = file("src/main/assets")
}

preBuild.dependsOn zipAssets

dependencies {
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.core:core:1.2.0-alpha04'
    implementation 'androidx.webkit:webkit:1.1.0-beta01'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'com.google.android.material:material:1.1.0-alpha10'

    implementation('io.socket:socket.io-client:1.0.0', {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    })

    implementation 'com.squareup.okhttp3:okhttp:4.2.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'

    implementation 'net.lingala.zip4j:zip4j:2.1.4'

    implementation 'androidx.core:core-ktx:1.2.0-alpha04'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
